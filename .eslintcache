[{"C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\index.js":"1","C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\Films.js":"2","C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\reportWebVitals.js":"3","C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\serviceWorkerRegistration.js":"4","C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\Grafic.js":"5","C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\TableF.js":"6"},{"size":831,"mtime":1607124737672,"results":"7","hashOfConfig":"8"},{"size":1984,"mtime":1607126153437,"results":"9","hashOfConfig":"8"},{"size":364,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":5064,"mtime":499162500000,"results":"11","hashOfConfig":"8"},{"size":1744,"mtime":1607123830783,"results":"12","hashOfConfig":"8"},{"size":2102,"mtime":1607125704155,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"58e72x",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\index.js",[],["30","31"],"C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\Films.js",["32"],"import React, { useState, useEffect } from \"react\";\r\nimport \"isomorphic-fetch\";\r\nimport es from \"./locales/es.json\";\r\nimport en from \"./locales/en.json\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Grafic from \"./Grafic\";\r\nimport TableF from \"./TableF\";\r\nimport {IntlProvider} from \"react-intl\";\r\n\r\nconst data = {\r\n  es: es,\r\n  en: en,\r\n};\r\n\r\nconst Films = () => {\r\n  const [films, setFilms] = useState([]);\r\n  const [url, setUrl] = useState([]);\r\n  const [keys, setKeys] = useState([]);\r\n  const [language, setLanguage] = useState(\"\");\r\n  const [title, setTitle] = useState(\"\");\r\n  const [localeMessages, setLocaleMessages] = useState({});\r\n  useEffect(() => {\r\n    if (!navigator.onLine) {\r\n      if (localStorage.getItem(\"films\") === null) {\r\n      } else {\r\n        setFilms(JSON.parse(localStorage.getItem(\"films\")));\r\n        setKeys(JSON.parse(localStorage.getItem(\"keys\")));\r\n      }\r\n    } else {\r\n      const le = navigator.language.split(/[-_]/)[0];\r\n      setLanguage ( le);\r\n      const inf = data[le];\r\n      setUrl(inf.url);\r\n      setUrl(inf.url);\r\n      setTitle(inf.title);\r\n      setLocaleMessages(inf);\r\n      fetch(url)\r\n        .then((res) => res.data.json())\r\n        .then((res) => {\r\n          setFilms(res);\r\n          setKeys(inf.keys);\r\n          localStorage.setItem(\"films\", JSON.stringify(res));\r\n          localStorage.setItem(\"keys\", JSON.stringify(inf.keys));\r\n        });\r\n    }\r\n  });\r\n  if (films.length === 0) {\r\n    return (\r\n      <div>\r\n        <h1> ... </h1>\r\n      </div>\r\n    );\r\n  } else if (navigator.onLine) {\r\n    return (\r\n      <div>\r\n        <IntlProvider locale={language} messages= {localeMessages}>\r\n            <TableF films={films} keys={keys} title={title}></TableF>\r\n        </IntlProvider>\r\n        <Grafic data={films}></Grafic>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <TableF films={films} keys={keys} title={title}></TableF>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default Films;\r\n","C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\reportWebVitals.js",[],"C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\Grafic.js",["33"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport * as d3 from \"d3\";\r\nconst width = 800;\r\nconst height = 600;\r\nconst margin = { top: 10, left: 50, bottom: 40, right: 10 };\r\nconst iwidth = width - margin.left - margin.right;\r\nconst iheight = height - margin.top - margin.bottom;\r\nconst Graph = (props) => {\r\n  const ref = useRef();\r\n  const [dibujo, setDibujo] = useState(false);\r\n  useEffect(() => {\r\n    const svg = d3.select(ref.current);\r\n    svg.attr(\"width\", width);\r\n    svg.attr(\"height\", height);\r\n    if (!dibujo) {\r\n      setDibujo(true);\r\n      draw();\r\n    }\r\n  });\r\n  const draw = () => {\r\n    let max = 0;\r\n    for (let a in props.data) {\r\n      max = Math.max(max, props.data[a].height);\r\n    }\r\n    const svg = d3.select(ref.current);\r\n    let g = svg\r\n      .append(\"g\")\r\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n    const y = d3.scaleLinear().domain([0, max]).range([iheight, 0]);\r\n\r\n    const x = d3\r\n      .scaleBand()\r\n      .domain(props.data.map((d) => d.name))\r\n      .range([0, iwidth])\r\n      .padding(0.1);\r\n\r\n    const bars = g.selectAll(\"rect\").data(props.data);\r\n\r\n    bars\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"class\", \"bar\")\r\n      .style(\"fill\", \"steelblue\")\r\n      .attr(\"x\", (d) => x(d.name))\r\n      .attr(\"y\", (d) => y(d.height))\r\n      .attr(\"height\", (d) => iheight - y(d.height))\r\n      .attr(\"width\", x.bandwidth());\r\n\r\n    g.append(\"g\")\r\n      .classed(\"x--axis\", true)\r\n      .call(d3.axisBottom(x))\r\n      .attr(\"transform\", `translate(0, ${iheight})`);\r\n\r\n    g.append(\"g\").classed(\"y--axis\", true).call(d3.axisLeft(y));\r\n  };\r\n  return (\r\n    <div id=\"chart\">\r\n      <svg ref={ref}></svg>\r\n    </div>\r\n  );\r\n};\r\nexport default Graph;\r\n","C:\\Users\\lilyd\\Documents\\20202\\web\\parcial2\\prueba\\src\\TableF.js",["34","35"],"import React, { useState, useEffect } from \"react\";\r\nimport \"isomorphic-fetch\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport {FormattedMessage} from 'react-intl';\r\n\r\nconst keysJson = [\"name\", \"description\", \"height\", \"weight\"];\r\nconst TableF = (props) => {\r\n  const [films, setFilms] = useState([]);\r\n  const [keys, setKeys] = useState([]);\r\n  const [title, setTitle] = useState(\"\");\r\n  useEffect(() => {\r\n    setFilms(props.films);\r\n    setKeys(props.keys);\r\n    setTitle(props.title);\r\n  });\r\n  if (title === \"\") {\r\n    return <div> </div>;\r\n  } else\r\n    return (\r\n      <div>\r\n        <h1>  <FormattedMessage id=\"Table.title\"/> </h1>\r\n        <Table>\r\n          <thead>\r\n            <tr class=\"thead-dark\">\r\n              <th> <FormattedMessage id=\"Table.id\"/> </th>\r\n              <th> <FormattedMessage id=\"Table.image\"/> </th>\r\n              <th> <FormattedMessage id=\"Table.name\"/> </th>\r\n              <th> <FormattedMessage id=\"Table.description\"/> </th>\r\n              <th> <FormattedMessage id=\"Table.height\"/> </th>\r\n              <th> <FormattedMessage id=\"Table.weight\"/> </th>\r\n              <th> <FormattedMessage id=\"Table.type\"/> </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {films.map((f) => {\r\n              return (\r\n                <tr>\r\n                  <th scope=\"row\"> {f.id} </th>\r\n                  <td>\r\n                    <img\r\n                      className=\"mb-5 img-fluid\"\r\n                      src={f.ThumbnailImage}\r\n                      alt={f.name}\r\n                    ></img>\r\n                  </td>\r\n                  {keysJson.map((k) => (\r\n                    <td>{f[k]}</td>\r\n                  ))}\r\n                  <td>\r\n                    {\" \"}\r\n                    {f.type.map((t) => (\r\n                      <span className=\"badge badge-secondary\"> {t}</span>\r\n                    ))}{\" \"}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    );\r\n};\r\nexport default TableF;\r\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":22,"column":3,"nodeType":"42","endLine":22,"endColumn":12,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":11,"column":3,"nodeType":"42","endLine":11,"endColumn":12,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":10,"column":10,"nodeType":"42","messageId":"48","endLine":10,"endColumn":14},{"ruleId":"40","severity":1,"message":"49","line":12,"column":3,"nodeType":"42","endLine":12,"endColumn":12,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setFilms'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [url] as a second argument to the useEffect Hook.","Identifier",["53"],"React Hook useEffect contains a call to 'setDibujo'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [dibujo, draw] as a second argument to the useEffect Hook.",["54"],"no-unused-vars","'keys' is assigned a value but never used.","unusedVar","React Hook useEffect contains a call to 'setFilms'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.films, props.keys, props.title] as a second argument to the useEffect Hook.",["55"],"no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},{"desc":"58","fix":"59"},{"desc":"60","fix":"61"},"Add dependencies array: [url]",{"range":"62","text":"63"},"Add dependencies array: [dibujo, draw]",{"range":"64","text":"65"},"Add dependencies array: [props.films, props.keys, props.title]",{"range":"66","text":"67"},[1430,1430],", [url]",[593,593],", [dibujo, draw]",[544,544],", [props.films, props.keys, props.title]"]